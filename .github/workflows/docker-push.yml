name: Build and push Docker image

on:
  push:
    branches:
      - main
      - SQ-*
    tags:
      - v*

jobs:
  push:
    runs-on: ubuntu-latest
    
    permissions:
      packages: write
      contents: read
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up cache
        run: mkdir -p cache

      - name: Cache downloaded data
        id: cache-download
        uses: actions/cache@v4
        with:
          path: cache
          key: cache-download
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=semver,pattern={{version}}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and export to Docker
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          load: true

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          provenance: false # Disabled because GitHub UI shows unknown/unknown images with it
          platforms: linux/amd64 # Add linux/arm64 when scancode becomes compatible with it
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Copy downloaded data to cache
        env:
          AGENT_TAG: ${{ steps.build.outputs.imageid }}
        run: make save-cache
